{"ast":null,"code":"var _jsxFileName = \"C:\\\\OpenServer\\\\domains\\\\123\\\\client\\\\src\\\\pages\\\\ApartmentPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst zoom = () => {\n  var elems = document.querySelectorAll('.materialboxed');\n  var instances = M.Materialbox.init(elems, options);\n};\n\nexport const ApartmenPageCart = _ref => {\n  let {\n    apartment\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"nav-wrapper colormenu menu\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"brand-logo logou\",\n            src: \"https://static.tildacdn.com/tild3738-3866-4537-a335-363534343034/__white.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col s12 m7\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              class: \"materialboxed\",\n              width: \"650\",\n              src: apartment.layout_image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"card-title\",\n              children: \"Card Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-action\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"This is a link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = ApartmenPageCart;\nexport const ApartmenPage = () => {\n  _s();\n\n  const {\n    request,\n    loading\n  } = useHttp();\n  const [id, setId] = useState(null);\n  const apartmenId = useParams().id;\n  const navigate = useNavigate();\n  const getData = useCallback(async () => {\n    try {\n      const fetched = await request('/api/' + apartmenId, 'GET', null, {});\n      setId(fetched);\n    } catch (e) {\n      navigate('/');\n    }\n  }, [request]);\n  useEffect(() => {\n    getData();\n  }, [getData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loading && id && /*#__PURE__*/_jsxDEV(ApartmenPageCart, {\n      apartment: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ApartmenPage, \"0eskpEVdDfCTELrc8Y7oelYHh6w=\", false, function () {\n  return [useHttp, useParams, useNavigate];\n});\n\n_c2 = ApartmenPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ApartmenPageCart\");\n$RefreshReg$(_c2, \"ApartmenPage\");","map":{"version":3,"sources":["C:/OpenServer/domains/123/client/src/pages/ApartmentPage.js"],"names":["React","useCallback","useEffect","useState","useParams","useNavigate","useHttp","zoom","elems","document","querySelectorAll","instances","M","Materialbox","init","options","ApartmenPageCart","apartment","layout_image","ApartmenPage","request","loading","id","setId","apartmenId","navigate","getData","fetched","e"],"mappings":"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","sourcesContent":["import React,{useCallback, useEffect, useState} from \"react\";\r\nimport { useParams,useNavigate } from \"react-router-dom\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst zoom = () =>{\r\n    var elems = document.querySelectorAll('.materialboxed');\r\n    var instances = M.Materialbox.init(elems, options);\r\n}\r\n\r\nexport const ApartmenPageCart = ({apartment}) => {\r\n    return(\r\n        <div>\r\n            <nav>\r\n                <div class=\"nav-wrapper colormenu menu\">\r\n                    <a href = '/'><img class=\"brand-logo logou\" src=\"https://static.tildacdn.com/tild3738-3866-4537-a335-363534343034/__white.png\"/></a>\r\n                </div>\r\n            </nav>\r\n            <div class=\"row\">\r\n                <div class=\"col s12 m7\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-image\">\r\n                    <img class=\"materialboxed\" width=\"650\" src={apartment.layout_image}></img>\r\n                    <span class=\"card-title\">Card Title</span>\r\n                    </div>\r\n                    <div class=\"card-content\">\r\n                    <p>I am a very simple card. I am good at containing small bits of information.\r\n                    I am convenient because I require little markup to use effectively.</p>\r\n                    </div>\r\n                    <div class=\"card-action\">\r\n                    <a href=\"#\">This is a link</a>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ApartmenPage = () =>{\r\n    const {request, loading} = useHttp();\r\n    const [id,setId] = useState(null);\r\n    const apartmenId = useParams().id;\r\n    const navigate =  useNavigate();\r\n\r\n    const getData = useCallback( async()=>{\r\n        try\r\n        {\r\n            const fetched = await request('/api/'+apartmenId, 'GET', null,{});\r\n            setId(fetched);\r\n        }\r\n        catch(e)\r\n        {\r\n            navigate('/');\r\n        }\r\n    },[request]);\r\n\r\n    useEffect(()=>{\r\n        getData();\r\n    },[getData]);\r\n\r\n    return(\r\n        <div>\r\n            {!loading && id && <ApartmenPageCart apartment={id}/>}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}