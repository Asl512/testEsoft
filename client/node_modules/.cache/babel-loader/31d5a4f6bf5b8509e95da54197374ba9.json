{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let header = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    setLoading(true);\n\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || \"Ошибка получения данных\");\n      }\n\n      setLoading(false);\n      return data;\n    } catch (error) {\n      setLoading(false);\n      setError(error.message);\n      throw error;\n    }\n  }, []);\n\n  const clearError = () => setError(null);\n\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};\n\n_s(useHttp, \"MstwQpYZpw83DP6eQvw4fjC0Jxg=\");","map":{"version":3,"sources":["C:/OpenServer/domains/123/client/src/hooks/http.hook.js"],"names":["React","useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","header","response","fetch","headers","data","json","ok","Error","message","clearError"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMO,OAAO,GAAGN,WAAW,CAAC,gBAAOO,GAAP,EAAsD;AAAA,QAA1CC,MAA0C,uEAAlC,KAAkC;AAAA,QAA3BC,IAA2B,uEAApB,IAAoB;AAAA,QAAdC,MAAc,uEAAN,EAAM;AAC9EP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG;AACC,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAK;AAACC,QAAAA,MAAD;AAASC,QAAAA,IAAT;AAAeI,QAAAA;AAAf,OAAL,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;;AAEA,UAAG,CAACJ,QAAQ,CAACK,EAAb,EACA;AACI,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,yBAA1B,CAAN;AACH;;AAEDf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,aAAOW,IAAP;AACH,KAXD,CAYA,OAAMV,KAAN,EACA;AACID,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAK,CAACc,OAAP,CAAR;AACA,YAAMd,KAAN;AACH;AACJ,GApB0B,EAoBzB,EApByB,CAA3B;;AAsBA,QAAMe,UAAU,GAAG,MAAMd,QAAQ,CAAC,IAAD,CAAjC;;AAEA,SAAM;AAACH,IAAAA,OAAD;AAAUI,IAAAA,OAAV;AAAmBF,IAAAA,KAAnB;AAAyBe,IAAAA;AAAzB,GAAN;AACH,CA7BM;;GAAMlB,O","sourcesContent":["import React from \"react\";\r\nimport {useState, useCallback} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method ='GET', body = null, header ={}) =>{\r\n        setLoading(true);\r\n        try{\r\n            const response = await fetch(url,{method, body, headers});\r\n            const data = await response.json();\r\n\r\n            if(!response.ok)\r\n            {\r\n                throw new Error(data.message || \"Ошибка получения данных\")\r\n            }\r\n\r\n            setLoading(false);\r\n            return data;\r\n        }\r\n        catch(error)\r\n        {\r\n            setLoading(false);\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n    },[]);\r\n\r\n    const clearError = () => setError(null);\r\n\r\n    return{loading, request, error,clearError}\r\n}"]},"metadata":{},"sourceType":"module"}